@page "/todo"
@inject TodoItemService service

<PageTitle>Todo</PageTitle>

<h3>Todo (@Items.Count(i => !i.IsComplete))</h3>

<ol>
    @foreach (var item in Items)
    {
        <li class="my-2">
            <input type="checkbox" @bind="item.IsComplete" class="btn-30 align-middle" />
            <input type="text" @bind="item.Name" class="align-middle" />
        </li>
    }
</ol>

<input placeholder="Something todo" @bind="newTodo" />
<button @onclick="AddTodo">Add todo</button>

<style>
    .btn-30 {
        width: 30px;
        height: 30px;
    }

    .va-mid {
        vertical-align: middle;
    }
</style>

@code {

    private string? newTodo;

    public List<TodoItemDto> Items { get; set; } = new();

    public async Task AddTodo()
    {
        try
        {
            var item = new TodoItemDto { Name = newTodo ?? string.Empty, IsComplete = false };
            await service.InsertAsync(item);
        }
        catch (Exception)
        {
        }
        finally
        {
            newTodo = string.Empty;
            await LoadData();
        }
    }

    private async Task LoadData()
        => Items = await service.GetAsync(new TodoItemsFilter() { Name = newTodo });

    protected override async Task OnInitializedAsync()
    {
        await LoadData();

        await base.OnInitializedAsync();
    }
}
